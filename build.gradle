plugins {
    id 'fabric-loom'
    id 'maven-publish'
    id "org.jetbrains.kotlin.jvm"
    id 'application'
    id 'com.github.johnrengelman.shadow' version '4.0.4'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.4.21'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
}


repositories {
    maven { url = "http://maven.fabricmc.net/" }
    mavenCentral()
    maven { url = "https://kotlin.bintray.com/kotlinx" }
    maven { url = 'https://repo.spring.io/milestone' }
    maven { url = 'https://jitpack.io' }
    maven { url = 'https://oss.sonatype.org/content/repositories/staging' }
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modCompile "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modCompile "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"


    modCompile "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"
    modCompile "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
    modApi "org.jetbrains.kotlinx:kotlinx-serialization-core:$kotlinx_serialization_runtime_version"
    include "org.jetbrains.kotlinx:kotlinx-serialization-core:$kotlinx_serialization_runtime_version"
//    include "org.jetbrains.kotlin:kotlinx-serialization-json:$kotlinx_serialization_runtime_version"
    compile ('net.dv8tion:JDA:4.2.0_224') {
        exclude module: 'opus-java'
    }
    modCompile "com.vdurmont:emoji-java:5.1.1"

    include ('net.dv8tion:JDA:4.2.0_224') {
        exclude module: 'opus-java'
    }
    include "net.sf.trove4j:trove4j:3.0.3"
    include 'org.slf4j:slf4j-nop:1.7.25'
    include 'org.slf4j:slf4j-api:1.7.25'
    include 'org.apache.commons:commons-collections4:4.1'
    include 'com.neovisionaries:nv-websocket-client:2.10'
    include 'com.squareup.okhttp3:okhttp:3.13.0'
    include 'com.squareup.okio:okio:1.17.2'
    include 'com.fasterxml.jackson.core:jackson-databind:2.10.1'
    include 'com.fasterxml.jackson.core:jackson-annotations:2.10.1'
    include 'com.fasterxml.jackson.core:jackson-core:2.10.1'
    include "org.json:json:20170516"

    include "com.vdurmont:emoji-java:4.0.0"

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}

compileKotlin.kotlinOptions.jvmTarget = "1.8"